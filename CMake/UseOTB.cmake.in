#
# This file sets up include directories, link directories, and
# compiler settings for a project to use OTB.  It should not be
# included directly, but rather through the OTB_USE_FILE setting
# obtained from OTBConfig.cmake.
#

if(OTB_BUILD_SETTINGS_FILE)
  include(${CMAKE_ROOT}/Modules/CMakeImportBuildSettings.cmake)
  CMAKE_IMPORT_BUILD_SETTINGS(${OTB_BUILD_SETTINGS_FILE})
endif()

# Add compiler flags needed to use OTB.
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OTB_REQUIRED_C_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OTB_REQUIRED_CXX_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OTB_REQUIRED_LINK_FLAGS}")
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${OTB_REQUIRED_LINK_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${OTB_REQUIRED_LINK_FLAGS}")

# Add include directories needed to use OTB.
include_directories(${OTB_INCLUDE_DIRS})

# Add link directories needed to use OTB.
link_directories(${OTB_LIBRARY_DIRS})


# Path to additional CMake modules
#   save the current value
set(BACKUP_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
#   add the OTB specific CMake modules dir BEFORE the current CMAKE_MODULE_PATH
set(CMAKE_MODULE_PATH
    ${OTB_CMAKEMODULE_DIRS}
    ${CMAKE_MODULE_PATH})
#   at the end of this file, CMAKE_MODULE_PATH will be set back to its original value
#   this way, the OTb specific FindXXX.cmake are only used in this file
#   and do not pollute the user space


find_program(OTB_TEST_DRIVER otbTestDriver PATHS
             ${OTB_BINARY_DIRS}
             ${OTB_BINARY_DIRS}/Release
             ${OTB_BINARY_DIRS}/MinSizeRel
             ${OTB_BINARY_DIRS}/RelWithDebInfo
             ${OTB_BINARY_DIRS}/Debug
             NO_SYSTEM_PATH)

find_program(OTB_APPLICATION_LAUNCHER otbApplicationLauncherCommandLine PATHS
             ${OTB_BINARY_DIRS}
             ${OTB_BINARY_DIRS}/Release
             ${OTB_BINARY_DIRS}/MinSizeRel
             ${OTB_BINARY_DIRS}/RelWithDebInfo
             ${OTB_BINARY_DIRS}/Debug
             NO_SYSTEM_PATH)

if(OTB_USE_EXTERNAL_ITK)
    find_package(ITK REQUIRED)
    include(${ITK_USE_FILE})
else()
  find_package(ITK REQUIRED
    HINTS ${OTB_INSTALL_PREFIX} ${OTB_BINARY_DIRS}/../Utilities/ITK)
  include(${ITK_USE_FILE})
endif()

if(ITK_USE_FFTWF OR ITK_USE_FFTWD)
    find_package(FFTW REQUIRED)
    include_directories(${FFTW_INCLUDE_PATH})
endif()

if(OTB_USE_EXTERNAL_EXPAT)
    find_package(EXPAT REQUIRED)
    include_directories(${EXPAT_INCLUDE_DIR})
else()
    add_definitions(-DOTB_USE_INTERNAL_EXPAT)
endif()


if(OTB_USE_EXTERNAL_BOOST)
  find_package(Boost REQUIRED)
  include_directories(${Boost_INCLUDE_DIR})

  # needed for automatic linking on msvc platform
  link_directories( ${Boost_LIBRARY_DIRS} )
endif()

if(OTB_USE_EXTERNAL_GDAL)
  find_package(GDAL REQUIRED)
  include_directories(${GDAL_INCLUDE_DIRS})
endif()

if(OTB_USE_EXTERNAL_LIBKML)
  find_package(LibKML REQUIRED)
  include_directories(${LIBKML_INCLUDE_DIRS})
endif()

if(OTB_USE_EXTERNAL_TINYXML)
  find_package(TinyXML REQUIRED)
  include_directories(${TINYXML_INCLUDE_DIRS})
endif()

if(OTB_USE_OPENCV)
  find_package(OpenCV
               REQUIRED
               PATHS
                /opt/local/lib/cmake # MacPort
               )

  include_directories(${OpenCV_INCLUDE_DIRS})
endif()

if(OTB_USE_MAPNIK)
        find_path(MAPNIK_INCLUDE_DIR mapnik/map.hpp PATHS)
        mark_as_advanced(MAPNIK_INCLUDE_DIR)

        find_library(MAPNIK_LIBRARY NAMES mapnik2 mapnik)
        mark_as_advanced(MAPNIK_LIBRARY)

        find_path(FREETYPE2_INCLUDE_DIR freetype/freetype.h PATHS /usr/include/freetype2)
        mark_as_advanced(FREETYPE2_INCLUDE_DIR)

        # libicuuc (http://site.icu-project.org/) is a unicode library mapnik relies on.
        # mapnik includes drag icu includes
        # when linking with mapnik, need to link with libicuuc (at least since 1.42 release)
        find_path(ICUUC_INCLUDE_DIR unicode/unistr.h)
        mark_as_advanced(ICUUC_INCLUDE_DIR)

        find_library(ICUUC_LIBRARY icuuc)
        mark_as_advanced(ICUUC_LIBRARY)

        # ltdl (libtool dl)
        find_path(LTDL_INCLUDE_DIR ltdl.h)
        mark_as_advanced(LTDL_INCLUDE_DIR)

        find_library(LTDL_LIBRARY ltdl)
        mark_as_advanced(LTDL_LIBRARY)

        if(NOT MAPNIK_INCLUDE_DIR)
                message(FATAL_ERROR
                        "Cannot find MAPNIK include directory. Please set MAPNIK_INCLUDE_DIR or set OTB_USE_MAPNIK OFF.")
        endif()
        if(NOT MAPNIK_LIBRARY)
                message(FATAL_ERROR
                        "Cannot find MAPNIK library. Please set MAPNIK_LIBRARY or set OTB_USE_MAPNIK OFF.")
        endif()

        if(NOT FREETYPE2_INCLUDE_DIR)
                message(FATAL_ERROR
                        "Cannot find FREETYPE2 include directory. Please set FREETYPE2_INCLUDE_DIR or set OTB_USE_MAPNIK OFF.")
        endif()

        if(NOT ICUUC_INCLUDE_DIR)
                message(FATAL_ERROR
                        "Cannot find ICUUC_INCLUDE_DIR include directory. Please set ICUUC_INCLUDE_DIR or set OTB_USE_MAPNIK OFF.")
        endif()
        if(NOT ICUUC_LIBRARY)
                message(FATAL_ERROR
                        "Cannot find ICUUC library, needed by MAPNIK. Please set ICUUC_LIBRARY or set OTB_USE_MAPNIK OFF.")
        endif()

        if(NOT LTDL_INCLUDE_DIR)
                message(FATAL_ERROR
                        "Cannot find LTDL_INCLUDE_DIR include directory. Please set LTDL_INCLUDE_DIR or set OTB_USE_MAPNIK OFF.")
        endif()
        if(NOT LTDL_LIBRARY)
                message(FATAL_ERROR
                        "Cannot find ICUUC library, needed by MAPNIK. Please set ICUUC_LIBRARY or set OTB_USE_MAPNIK OFF.")
        endif()

        if(NOT OTB_MAPNIK_SUPPORTS_API20)
          add_definitions(-DOTB_MAPNIK_COMPATIBILITY_API07)
        endif()

        # Add compiler option
        add_definitions(-DOTB_USE_MAPNIK)

        include_directories(${MAPNIK_INCLUDE_DIR}
                            ${ICUUC_INCLUDE_DIR}
                            ${LTDL_INCLUDE_DIR}
                            ${FREETYPE2_INCLUDE_DIR})

endif()

include(${OTB_LIBRARY_DIRS}/OTBWrapperMacros.cmake)

set(CMAKE_MODULE_PATH ${BACKUP_CMAKE_MODULE_PATH})
